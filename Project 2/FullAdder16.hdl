/**
 * Computes the sum of two 16 bit buses and a 1 bit carry.
 */

CHIP FullAdder16 {
    IN a[16], b[16], c;  // 1-bit inputs
    OUT sum[16],     // Right bit of a + b + c
        carry;   // Left bit of a + b + c

    PARTS:
    /*Assignment: Project 2, CSC 335, Berea College
      Name: Emily Carter - cartere
      Date: 09/15/17
      Instructor: Mario Nakazawa*/
	//if abnotc, carry is 1, out is 0  
	
	FullAdder(a=a[0], b=b[0], c=c, sum=sum[0], carry=c1);  //sum 0
	FullAdder(a=a[1], b=b[1], c=c1, sum=sum[1], carry=c2);
	FullAdder(a=a[2], b=b[2], c=c2, sum=sum[2], carry=c3);
	FullAdder(a=a[3], b=b[3], c=c3, sum=sum[3], carry=c4);
	FullAdder(a=a[4], b=b[4], c=c4, sum=sum[4], carry=c5);
	FullAdder(a=a[5], b=b[5], c=c5, sum=sum[5], carry=c6);
	FullAdder(a=a[6], b=b[6], c=c6, sum=sum[6], carry=c7);
	FullAdder(a=a[7], b=b[7], c=c7, sum=sum[7], carry=c8);
	FullAdder(a=a[8], b=b[8], c=c8, sum=sum[8], carry=c9);
	FullAdder(a=a[9], b=b[9], c=c9, sum=sum[9], carry=c10);
	FullAdder(a=a[10], b=b[10], c=c10, sum=sum[10], carry=c11);
	FullAdder(a=a[11], b=b[11], c=c11, sum=sum[11], carry=c12);
	FullAdder(a=a[12], b=b[12], c=c12, sum=sum[12], carry=c13);
	FullAdder(a=a[13], b=b[13], c=c13, sum=sum[13], carry=c14);
	FullAdder(a=a[14], b=b[14], c=c14, sum=sum[14], carry=c15);
	FullAdder(a=a[15], b=b[15], c=c15, sum=sum[15], carry=carry);	
}