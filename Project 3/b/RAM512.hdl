// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out hold the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    /*Assignment: Project 3, CSC 335, Berea College
      Name: Emily Carter - cartere
      Date: 09/29/17
      Instructor: Mario Nakazawa*/
	
	//still just storing 1 16 bit bus, just more options than Ram8
	DMux8Way(in=load, sel=address[6..8], a=l0, b=l1, c=l2, d=l3, e=l4, f=l5, g=l6, h=l7);  //to decide which register to store to/load.
	
	//Need 8 RAM64
	RAM64(in=in, load=l0, address= address[0..5],out=out0);  //RAM64 1. Address is 6 bit bus
	RAM64(in=in, load=l1, address= address[0..5],out=out1);  //each out is 16 bit wide bus
	RAM64(in=in, load=l2, address= address[0..5],out=out2);
	RAM64(in=in, load=l3, address= address[0..5],out=out3);
	RAM64(in=in, load=l4, address= address[0..5],out=out4);
	RAM64(in=in, load=l5, address= address[0..5],out=out5);
	RAM64(in=in, load=l6, address= address[0..5],out=out6);
	RAM64(in=in, load=l7, address= address[0..5],out=out7);  //RAM64 8
    
	//decide which register to output, outs the register that was loaded
	Mux8Way16(a=out0,b=out1, c=out2, d=out3, e=out4, f=out5, g=out6, h=out7, sel=address[6..8], out=out);
}
