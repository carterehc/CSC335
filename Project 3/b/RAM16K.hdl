// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out hold the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    /*Assignment: Project 3, CSC 335, Berea College
      Name: Emily Carter - cartere
      Date: 09/29/17
      Instructor: Mario Nakazawa*/
	
	//still just storing 1 16 bit bus, just more options than Ram8
	DMux4Way(in=load, sel=address[12..13], a=l0, b=l1, c=l2, d=l3);  //to decide which register to store to/load. Address is 2 bit because sel is 2 bit
	
	//Need 4 RAM4K
	RAM4K(in=in, load=l0, address= address[0..11],out=out0);  //RAM4K 1. Address is 6 bit bus
	RAM4K(in=in, load=l1, address= address[0..11],out=out1);  //each out is 16 bit wide bus
	RAM4K(in=in, load=l2, address= address[0..11],out=out2);
	RAM4K(in=in, load=l3, address= address[0..11],out=out3);

    
	//decide which register to output, outs the register that was loaded
	Mux4Way16(a=out0,b=out1, c=out2, d=out3, sel=address[12..13], out=out);
}
